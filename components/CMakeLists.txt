option(OPENLF_WITH_CAMARRAY "build camarray component" OFF)

file(GLOB COMPONENTS "*.cpp")
foreach(COMP ${COMPONENTS})
  get_filename_component(COMPONENT_NAME ${COMP} NAME_WE)
  
  if (${COMPONENT_NAME} STREQUAL "comp_camarray")
    if (OPENLF_WITH_CAMARRAY)
      message("special component ${COMPONENT_NAME}")#
      # FIXME fix hardcoded paths, SiliconSoftware provides cmake files!
      if (OPENLF_COMPILER_MSVC)
        include_directories("C:/Program Files/SiliconSoftware/Runtime5.4.1.2/include")
        link_directories("C:/Program Files/SiliconSoftware/Runtime5.4.1.2/lib/visualc")
      else()
        include_directories("/home/hendrik/Downloads/siso/include")
        link_directories("/home/hendrik/Downloads/siso/lib64/")
      endif()
      add_library(${COMPONENT_NAME} MODULE ${COMP} comp_camarray/cameraarray.cpp)
      if (OPENLF_COMPILER_MSVC)
        target_link_libraries(${COMPONENT_NAME} clsersis.lib fglib5.lib gbelib.lib)
      else()
        target_link_libraries(${COMPONENT_NAME} clsersis fglib5 gbelib)
      endif()
      target_link_libraries(${COMPONENT_NAME} DSPatch openlf debug;clifd optimized;clif ${Boost_LIBRARIES})
    endif()
  else()
    message("compile component ${COMPONENT_NAME}")
    add_library(${COMPONENT_NAME} MODULE ${COMP})
    target_link_libraries(${COMPONENT_NAME} DSPatch openlf debug;clifd optimized;clif ${Boost_LIBRARIES})
  endif()
  
endforeach()

file(GLOB CIRCUITS "*.gml")
foreach(CIRC ${CIRCUITS})
  get_filename_component(CIRC_NAME ${CIRC} NAME)
  if (OPENLF_COMPILER_MSVC)
    configure_file(${CIRC} "${CMAKE_CURRENT_BINARY_DIR}/Release/${CIRC_NAME}" COPYONLY)
    configure_file(${CIRC} "${CMAKE_CURRENT_BINARY_DIR}/Debug/${CIRC_NAME}" COPYONLY)
  else()
    configure_file(${CIRC} "${CMAKE_CURRENT_BINARY_DIR}/${CIRC_NAME}" COPYONLY)
  endif()
endforeach()
